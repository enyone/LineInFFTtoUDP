package com.enymind.audio.gui;

import com.enymind.audio.FFTInterruptable;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import javax.swing.SwingUtilities;

/**
 *
 * @author Enymind Oy
 */
public class FFTFrame extends javax.swing.JFrame implements FFTInterruptable {

  /**
   * Creates new form FFTFrame
   */
  public FFTFrame() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jTabbedPane1 = new javax.swing.JTabbedPane();
    FFTCanvasPanel = new javax.swing.JPanel();
    FFTCanvas = new java.awt.Canvas();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    FFTCanvasPanel.setLayout(new java.awt.GridLayout());
    FFTCanvasPanel.add(FFTCanvas);

    jTabbedPane1.addTab("FFT Canvas", FFTCanvasPanel);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private java.awt.Canvas FFTCanvas;
  private javax.swing.JPanel FFTCanvasPanel;
  private javax.swing.JTabbedPane jTabbedPane1;
  // End of variables declaration//GEN-END:variables

  @Override
  public void fftInterrupt(double[] spectrum) {
    // Tell Swing UI to repaint (AWT canvas)
    SwingUtilities.invokeLater(new CanvasPainter(spectrum));
  }

  public class CanvasPainter implements Runnable {

    double[] spectrum;

    public CanvasPainter(double[] spectrum) {
      this.spectrum = spectrum;
    }

    // This will be run in EDT (event dispatch thread) for better UI performance
    @Override
    public void run() {
      int canvasWidth = FFTCanvasPanel.getWidth() / 3;
      int canvasHeight = FFTCanvasPanel.getHeight();

      int spectrumSize = this.spectrum.length - 1;
      int spectrumMax = 64;

      // Draw thick red lines on a black background
      Graphics2D graps = (Graphics2D) FFTCanvas.getGraphics();
      graps.setColor(Color.BLACK);
      graps.fillRect(0, 0, FFTCanvasPanel.getWidth(), FFTCanvasPanel.getHeight());
      graps.setColor(Color.RED);
      graps.setStroke(new BasicStroke(10));

      // One red line for each frequency in spectrum array
      int value, xPos;
      for (int i = 1; i < spectrumSize; i++) {
        value = (int) (100.0 * (this.spectrum[i] / spectrumMax));
        xPos = (int) Math.round(i * ((double) (canvasWidth - 1) / ((spectrumSize / 2) - 1)));
        graps.drawLine(xPos, (canvasHeight - 2), xPos, ((canvasHeight - 2) - value));
      }
    }
  }
}
